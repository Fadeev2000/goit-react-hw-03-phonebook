{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInput","e","setState","target","value","handleSubmit","preventDefault","newContact","id","uuidv4","isNewContact","props","onSubmit","alert","resetInput","contact","this","onCheck","some","el","nameInput","isTwoInputValue","className","css","form","form__label","type","form__input","pattern","title","required","onChange","form__button","disabled","Component","Filter","label","input","ContactList","items","onDeleteContact","map","item","li","button","onClick","App","contacts","filter","addContact","prevState","deleteContact","contactId","changeFilter","bookContacts","JSON","parse","localStorage","getItem","prevProps","prevContacts","nextContacts","setItem","stringify","normalizedFilter","toLowerCase","includes","visibleContacts","getVisibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00321c1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1mShx\",\"form__label\":\"ContactForm_form__label__2Y5_B\",\"form__input\":\"ContactForm_form__input__2dAh_\",\"form__button\":\"ContactForm_form__button__13-vb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3rNHb\",\"input\":\"Filter_input__T4cQW\",\"form__button\":\"Filter_form__button__3J6dT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__3prhw\",\"button\":\"ContactList_button__1nTZq\"};","import { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    };\n\n    isNewContact(contact) {\n        return !this.props.onCheck.some(el => el.name === contact);\n    }\n\n    handleInput = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    };\n    \n    handleSubmit = e => {\n        e.preventDefault();\n\n        const newContact = { name: this.state.name, id: uuidv4(), number: this.state.number };\n                \n        if (this.isNewContact(newContact.name)) {\n            this.props.onSubmit(newContact);\n        } else {\n            alert(`${newContact.name} is already in contacts`);\n        }\n\n        this.resetInput('name');\n        this.resetInput('number');\n    };\n    \n    resetInput(nameInput) {\n        this.setState({ [nameInput]: '' });\n    };    \n    \n    render() {\n        const isTwoInputValue = this.state.name !== '' && this.state.number !== '';\n\n        return (\n            <form className={css.form} onSubmit={this.handleSubmit}>\n            <label className={css.form__label}>Name\n              <input\n                type=\"text\"\n                name=\"name\"\n                className={css.form__input}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                value={this.state.name}\n                onChange={this.handleInput}\n              />\n            </label>\n            <label className={css.form__label}>Number\n              <input\n                type=\"tel\"\n                name=\"number\"\n                className={css.form__input}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                value={this.state.number}\n                onChange={this.handleInput}\n              />\n            </label>\n                {isTwoInputValue ?\n                    <button type=\"submit\" className={css.form__button}>Add contact</button> :\n                    <button type=\"submit\" className={css.form__button} disabled>Add contact</button>\n                }\n          </form>\n        );\n    }\n    \n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onCheck: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })).isRequired\n}\n\nexport default ContactForm;","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n    return (\n        <label className={css.label}>Find contacts by name\n            <input\n                type=\"text\"\n                name=\"filter\"\n                className={css.input}\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\nfunction ContactList({ items, onDeleteContact }) {\n    return (\n         <ul>\n        {items.map(item => (<li key={item.id} className={css.li}>{item.name}: {item.number}\n          <button className={css.button} type=\"button\" onClick={() => onDeleteContact(item.id)}>Delete</button>\n        </li>))}\n          </ul>\n    );\n}\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })).isRequired,\n  onDeleteContact: PropTypes.func.isRequired\n}\n\nexport default ContactList;","//import logo from './logo.svg';\nimport { Component } from 'react';\nimport './App.css';\n\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\n/*const init = [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ]*/\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const bookContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (bookContacts) this.setState({contacts: bookContacts})\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevContacts = prevState.contacts;\n    const nextContacts = this.state.contacts;\n\n    if (prevContacts !== nextContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = newContact => {\n    this.setState(prevState => (\n      { contacts: [newContact, ...prevState.contacts] }\n    ));\n  };\n  \n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  };\n\n  getVisibleContacts() {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const items = filter === '' ?\n      contacts :\n      contacts.filter(item => item.name.toLowerCase().includes(normalizedFilter)\n      );\n    return items;\n  };\n  \n  render() {\n    const { filter, contacts } = this.state; \n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <div>\n          <h1>Fhonebook</h1>\n          <ContactForm onSubmit={this.addContact} onCheck={contacts}/>\n          \n          <h2>Contacts</h2>\n          {contacts.length !== 0 && (\n            <>\n              <Filter value={filter} onChange={this.changeFilter} />\n\n              <ContactList items={visibleContacts} onDeleteContact={this.deleteContact} />\n            </>\n          )}\n         \n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}